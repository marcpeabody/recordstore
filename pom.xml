<project
 xmlns="http://maven.apache.org/POM/4.0.0"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 <modelVersion>4.0.0</modelVersion>

 <groupId>com.edgecase</groupId>
 <!-- notice how we specify the packaging to be a war,
     that way, maven knows where to copy the jar files -->
 <packaging>war</packaging>
 <version>1.0-SNAPSHOT</version>
 <artifactId>recordstore</artifactId>
 <name>recordstore</name>
 <dependencies>
 <dependency>
   <groupId>org.apache.commons</groupId>
   <artifactId>commons-math</artifactId>
   <version>2.1</version>
   <scope>compile</scope>
 </dependency>
 </dependencies>
 <build>
 <finalName>recordstore</finalName>
 <plugins>
 <plugin>
   <groupId>org.codehaus.mojo</groupId>
   <artifactId>exec-maven-plugin</artifactId>
   <executions>
     <execution>
     <!-- This tasks only creates a basic structure
     expected by maven,
     so it can do its work -->
       <id>create-mock-web-descriptor</id>
       <phase>compile</phase>
       <configuration>
         <executable>/bin/sh</executable>
         <workingDirectory>.</workingDirectory>
         <arguments>
           <argument>-c</argument>
           <argument>
             echo "***** web.xml *****"
             mkdir -p target/recordstore/WEB-INF
             touch    target/recordstore/WEB-INF/web.xml
           </argument>
         </arguments>
       </configuration>
       <goals>
         <goal>exec</goal>
       </goals>
     </execution>
     <execution>
     <!-- Now in the package phase we copy the
     jar files that maven put into the fake
     web app to our rails' lib folder -->
       <id>copy-needed-jars-into-lib</id>
       <phase>package</phase>
       <configuration>
         <executable>/bin/sh</executable>
         <workingDirectory>.</workingDirectory>
         <arguments>
           <argument>-c</argument>
           <argument>

             rm -f lib/*.jar
             cp target/recordstore/WEB-INF/lib/*.jar lib
             rm -rf target/recordstore*
             rm -rf src
           </argument>
         </arguments>
       </configuration>
       <goals>
         <goal>exec</goal>
       </goals>
     </execution>
     <execution>
     <!-- Here we optionally create the final war file
     containing our rails app using warbler,
     doing a small cleanup of the files
     and folders maven created  -->
       <id>create-final-war</id>
       <phase>package</phase>
       <configuration>
         <executable>/bin/sh</executable>
         <workingDirectory>.</workingDirectory>
         <arguments>
           <argument>-c</argument>
           <argument>
              echo "----- making war -----"
              rm -rf *.war tmp/war
              jruby -S warble
              mv *.war /Library/Tomcat/webapps/recordstore.war
           </argument>
         </arguments>
       </configuration>
       <goals>
         <goal>exec</goal>
       </goals>
     </execution>
   </executions>
 </plugin>
</plugins>
 </build>
 </project>